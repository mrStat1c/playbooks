---
- name: Stop MySQL
  systemd:
    name: mysqld
    state: stopped


- name: Set MYSQLD_OPTS
  shell: systemctl set-environment MYSQLD_OPTS="--skip-grant-tables"


- name: Start MySQL
  systemd:
    name: mysqld
    state: started


- name: Set new root password
  community.mysql.mysql_query:
    login_user: root
    query:
      - UPDATE mysql.user SET authentication_string = PASSWORD('MyNewPass_123') WHERE User = 'root' AND Host = 'localhost'
      - FLUSH PRIVILEGES
      - ALTER USER 'root'@'localhost' IDENTIFIED BY 'MyNewPass_123'
      - FLUSH PRIVILEGES


- name: Stop MySQL
  systemd:
    name: mysqld
    state: stopped


- name: Unset environment variables
  shell: systemctl unset-environment MYSQLD_OPTS


- name: Start MySQL
  systemd:
    name: mysqld
    state: started


- name: Edit my.cnf file
  block:
    - name: Add settings after setting "pid-file"
      lineinfile:
        path: /etc/my.cnf
        line: "{{ item }}"
        insertafter: "pid-file"
        firstmatch: yes
        create: yes
      with_items:
        - lower_case_table_names=1
        - validate-password=off
    - name: Restart MySQL
      systemd:
        name: mysqld
        state: restarted


- name: Create remote root user and set all privileges for remote root user
  community.mysql.mysql_query:
    login_user: root
    login_password: MyNewPass_123
    query:
      - CREATE USER 'root'@'%' IDENTIFIED BY 'root'
      - GRANT ALL PRIVILEGES ON *.* TO 'root'@'%' WITH GRANT OPTION


- name: Create schemes and users
  community.mysql.mysql_query:
    login_user: root
    login_password: MyNewPass_123
    query:
      - drop user if exists {{ item.user }}@'%'
      - drop database if exists {{ item.scheme }}
      - create database {{ item.scheme }}
      - create user {{ item.user }}@'%' IDENTIFIED BY '{{ item.scheme }}'
      - grant ALL on {{ item.scheme }}.* to {{ item.user }}@'%'
      - grant ALL on {{ item.scheme }}.* to root@'%'
      - ALTER SCHEMA {{ item.scheme }} DEFAULT CHARACTER SET utf8 DEFAULT COLLATE utf8_unicode_ci
  loop:
    - { user: 'user1', scheme: 'db1' }
    - { user: 'user2', scheme: 'db2' }
    - { user: 'user3', scheme: 'db3' }